EDFD CitizenVoting[
	
assets: Asset "Username/Password" values: [ L C ] source: Citizen targets: Login , Asset Crendentials values: [ ] source: "User DB" targets: Login , Asset Vote values: [ L ] source: "Place Vote" targets: "Voting DB" , Asset Programs values: [ L ] source: "Voting DB" targets: Citizen ,  Asset  bestAsset values: [ L C ] source: "Citizen Client" targets: "View Candidate Program" ,  Asset  AlsoAPrettyGoodAsset values: [ M Av ] source: "Citizen Client" targets: "View Candidate Program" , Asset farawayland values: [ ] source: Login targets: "View Candidate Program" , Asset highpriority values: [ ] source: Login targets: "View Candidate Program" , Asset assetttto values: [ ] source: "User DB" targets: Login , Asset totofold values: [ M ] source: "Place Vote" targets: toFoldWithPlaceVote , Asset yepp values: [ M ] source: toFoldWithPlaceVote targets: "Place Vote" , Asset low values: [ L ] source: notFold targets: "Citizen Client" , Asset toplacevote values: [ M ] source: dontfoldbcchannels targets: "Place Vote" elements: ExternalEntity Citizen [ assets: "Username/Password" incoming flows: "View Candidate Program.Eight" , "Login.Two" outgoing flows: One [ assets: "Username/Password" source: Citizen targets: Login channel VLAN ] ,  citToLogin [ source: Citizen targets: Login ] , shouldBundle [ assets: "Username/Password" source: Citizen targets: Login channel VLAN ] ] , Process Login [ assets: Crendentials , "Username/Password" , farawayland , highpriority incoming flows: "Citizen.One" , "User DB.Three" , "User DB.test1" , "Citizen.citToLogin" , "Citizen.shouldBundle" outgoing flows: Two [ source: Login targets: Citizen ] , Four [ assets: farawayland source: Login targets: "Citizen Client" ] , neim [ source: Login targets: "User DB" ] , highpriorityflow [ assets: highpriority source: Login targets: "Citizen Client" ] ] , Process "Citizen Client" [ assets: bestAsset , AlsoAPrettyGoodAsset , highpriority , low assumption: [ C layer: Architectural ] incoming flows: "Login.Four" , "View Candidate Program.freddie" , "Login.highpriority" , "notFold.fromnotfold" outgoing flows: Five [ assets: Programs source: "Citizen Client" targets: "Place Vote" ] , Seven [ assets: AlsoAPrettyGoodAsset source: "Citizen Client" targets: "View Candidate Program" ] , radiogaga [ assets: bestAsset source: "Citizen Client" targets: "View Candidate Program" ] , radiogugu [ assets: highpriority source: "Citizen Client" targets: "View Candidate Program" ] , queen [ source: "Citizen Client" targets: "View Candidate Program" channel ETH ] , tonotfold [ assets: bestAsset source: "Citizen Client" targets: notFold ] ] , DataStore "User DB" [ assets: Crendentials , assetttto incoming flows: "Login.neim" outgoing flows: Three [ assets: Crendentials source: "User DB" targets: Login ] , test1 [ assets: assetttto source: "User DB" targets: Login ] ] , Process "Place Vote" [ assets: Vote , totofold , yepp , toplacevote assumption: [ I ] incoming flows: "Citizen Client.Five" , "Voting DB.try" , "toFoldWithPlaceVote.kaya" , "toFoldWithPlaceVote.yaya" , "dontfoldbcchannels.flowing" outgoing flows: Six [ assets: Vote source: "Place Vote" targets: "Voting DB" channel ETH ] ,  yep [ assets: Vote source: "Place Vote" targets: "Voting DB" channel ETH ] , regular [ assets: totofold source: "Place Vote" targets: toFoldWithPlaceVote ] , stillflowing [ assets: totofold source: "Place Vote" targets: dontfoldbcchannels channel VLAN ] ] , DataStore "Voting DB" [ assets: Programs , Vote incoming flows: "Place Vote.Six" , "Place Vote.yep" outgoing flows: logi [ assets: Programs source: "Voting DB" targets: "View Candidate Program" ] , try [ source: "Voting DB" targets: "Place Vote" channel ETH ] ] , Process "View Candidate Program" [ assets: Programs , AlsoAPrettyGoodAsset , bestAsset , highpriority incoming flows: "Citizen Client.Seven" , "Voting DB.logi" , "Citizen Client.radiogaga" , "Citizen Client.radiogugu" , "Citizen Client.queen" outgoing flows: Eight [ assets: Programs source: "View Candidate Program" targets: Citizen ] ,  freddie [ assets: farawayland source: "View Candidate Program" targets: "Citizen Client" ] ] , Process toFoldWithPlaceVote [ assets: totofold , yepp incoming flows: "Place Vote.regular" outgoing flows: kaya [ assets: yepp source: toFoldWithPlaceVote targets: "Place Vote" ] , yaya [ source: toFoldWithPlaceVote targets: "Place Vote" ] ] , Process notFold [ assets: low , bestAsset incoming flows: "Citizen Client.tonotfold" outgoing flows: fromnotfold [ source: notFold targets: "Citizen Client" ] ] , Process dontfoldbcchannels [ assets: toplacevote , totofold incoming flows: "Place Vote.stillflowing" outgoing flows: flowing [ assets: toplacevote source: dontfoldbcchannels targets: "Place Vote" ] ] ]